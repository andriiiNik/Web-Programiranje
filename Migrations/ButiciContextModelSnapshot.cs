// <auto-generated />
using System;
using ButiciBackend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ButiciBackend.Migrations
{
    [DbContext(typeof(ButiciContext))]
    partial class ButiciContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ButiciBackend.Models.Artikal", b =>
                {
                    b.Property<int>("Sifra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Sifra")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brend")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Brend");

                    b.Property<int>("Cena")
                        .HasColumnType("int")
                        .HasColumnName("Cena");

                    b.Property<string>("Model")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Model");

                    b.HasKey("Sifra");

                    b.ToTable("Artikal");
                });

            modelBuilder.Entity("ButiciBackend.Models.Butik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NazivButika")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Naziv");

                    b.Property<int>("Telefon")
                        .HasMaxLength(50)
                        .HasColumnType("int")
                        .HasColumnName("Kontakt telefon");

                    b.HasKey("ID");

                    b.ToTable("Butik");
                });

            modelBuilder.Entity("ButiciBackend.Models.Grad", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NazivGrada")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Naziv");

                    b.HasKey("ID");

                    b.ToTable("Grad");
                });

            modelBuilder.Entity("ButiciBackend.Models.SpojAdresa", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Adresa");

                    b.Property<int?>("ButikID")
                        .HasColumnType("int");

                    b.Property<int?>("GradID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ButikID");

                    b.HasIndex("GradID");

                    b.ToTable("SpojAdresa");
                });

            modelBuilder.Entity("ButiciBackend.Models.SpojVelicina", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArtikalSifra")
                        .HasColumnType("int");

                    b.Property<int?>("ButikID")
                        .HasColumnType("int");

                    b.Property<string>("Velicina")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Velicina");

                    b.HasKey("ID");

                    b.HasIndex("ArtikalSifra");

                    b.HasIndex("ButikID");

                    b.ToTable("SpojVelicina");
                });

            modelBuilder.Entity("ButiciBackend.Models.SpojAdresa", b =>
                {
                    b.HasOne("ButiciBackend.Models.Butik", "Butik")
                        .WithMany("ButikAdresa")
                        .HasForeignKey("ButikID");

                    b.HasOne("ButiciBackend.Models.Grad", "Grad")
                        .WithMany("GradAdrese")
                        .HasForeignKey("GradID");

                    b.Navigation("Butik");

                    b.Navigation("Grad");
                });

            modelBuilder.Entity("ButiciBackend.Models.SpojVelicina", b =>
                {
                    b.HasOne("ButiciBackend.Models.Artikal", "Artikal")
                        .WithMany("Butici")
                        .HasForeignKey("ArtikalSifra");

                    b.HasOne("ButiciBackend.Models.Butik", "Butik")
                        .WithMany("Artikli")
                        .HasForeignKey("ButikID");

                    b.Navigation("Artikal");

                    b.Navigation("Butik");
                });

            modelBuilder.Entity("ButiciBackend.Models.Artikal", b =>
                {
                    b.Navigation("Butici");
                });

            modelBuilder.Entity("ButiciBackend.Models.Butik", b =>
                {
                    b.Navigation("Artikli");

                    b.Navigation("ButikAdresa");
                });

            modelBuilder.Entity("ButiciBackend.Models.Grad", b =>
                {
                    b.Navigation("GradAdrese");
                });
#pragma warning restore 612, 618
        }
    }
}
